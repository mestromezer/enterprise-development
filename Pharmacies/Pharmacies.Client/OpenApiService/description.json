{
  "openapi": "3.0.1",
  "info": {
    "title": "Pharmacies API",
    "version": "v1"
  },
  "paths": {
    "/api/Analytics/pharmacy/{pharmacyNumber}/positions": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести сведения о всех препаратах в заданной аптеке, упорядочить по названию.",
        "parameters": [
          {
            "name": "pharmacyNumber",
            "in": "path",
            "description": "Pharmacy number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/drug/{drugName}/pharmacies": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести для данного препарата подробный список всех аптек с указанием количества препарата в аптеках.",
        "parameters": [
          {
            "name": "drugName",
            "in": "path",
            "description": "Drug name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/average-cost": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести информацию о средней стоимости препаратов каждой фармацевтической группе для каждой аптеки.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAverageCostPerGroupPerPharmacyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAverageCostPerGroupPerPharmacyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAverageCostPerGroupPerPharmacyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/drug/{drugName}/top-pharmacies": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести топ 5 аптек по количеству и объёму продаж данного препарата за указанный период времени.",
        "parameters": [
          {
            "name": "drugName",
            "in": "path",
            "description": "Drug name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyAndNumericStatisticsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/drug/{drugName}/district/{district}/min-volume/{minVolume}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести список аптек указанного района, продавших заданный препарат более указанного объёма.",
        "parameters": [
          {
            "name": "drugName",
            "in": "path",
            "description": "Drug name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "in": "path",
            "description": "District",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minVolume",
            "in": "path",
            "description": "Minimum volume",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/drug/{drugName}/min-price": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Вывести список аптек, в которых указанный препарат продается с минимальной ценой.",
        "parameters": [
          {
            "name": "drugName",
            "in": "path",
            "description": "Drug name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PharmaceuticalGroupReference": {
      "get": {
        "tags": [
          "PharmaceuticalGroupReference"
        ],
        "summary": "Возврашает все связи",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PharmaceuticalGroupReference/{code}": {
      "get": {
        "tags": [
          "PharmaceuticalGroupReference"
        ],
        "summary": "По id позиции возвращает список фарм. групп",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Id позиции",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PharmaceuticalGroupReference"
        ],
        "summary": "Устанавливает связь позиции и фарм. группы",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PharmaceuticalGroups": {
      "get": {
        "tags": [
          "PharmaceuticalGroups"
        ],
        "summary": "Read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PharmaceuticalGroups"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PharmaceuticalGroups/{id}": {
      "get": {
        "tags": [
          "PharmaceuticalGroups"
        ],
        "summary": "Read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmaceuticalGroupDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PharmaceuticalGroups"
        ],
        "summary": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PharmaceuticalGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PharmaceuticalGroups"
        ],
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Pharmacies": {
      "get": {
        "tags": [
          "Pharmacies"
        ],
        "summary": "Read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PharmacyDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pharmacies"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Pharmacies/{number}": {
      "get": {
        "tags": [
          "Pharmacies"
        ],
        "summary": "Read",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pharmacies"
        ],
        "summary": "Update",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PharmacyDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Pharmacies"
        ],
        "summary": "Delete",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Positions": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Positions"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Positions/{code}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Read",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Positions"
        ],
        "summary": "Update",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Positions"
        ],
        "summary": "Delete",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Prices": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "Data for new price",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Prices/{id}": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "Read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Price ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prices"
        ],
        "summary": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Price ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated price data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prices"
        ],
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Price ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductGroups": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroupDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductGroups/{id}": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroups"
        ],
        "summary": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAverageCostPerGroupPerPharmacyDto": {
        "type": "object",
        "properties": {
          "pharmacy": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "averageCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PharmaceuticalGroupDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PharmacyAndNumericStatisticsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ifInteger": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PharmacyDto": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "directorFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pharmacyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "productionTime": {
            "type": "string",
            "format": "date-time"
          },
          "ifCash": {
            "type": "boolean",
            "nullable": true
          },
          "sellerOrganizationName": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "sellTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "ProductGroupDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}